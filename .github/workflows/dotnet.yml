name: Build

on:
  push:
    branches:
      - master
      - 'release/**'
  pull_request:
    types: [opened, synchronize, reopened]

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Get repo name
      id: get-repo-name
      run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 5.0.x

    - name: Build Module
      shell: pwsh
      run: |
        $impl = $PWD.Path + "/StardewValley-implementations";
        $path = $PWD.Path + "/StardewValley";
        $final = $path + "/mods";
        $proj = "$env:REPO_NAME/$env:REPO_NAME.csproj";
        $pdll = $path + "/mods/$env:REPO_NAME/$env:REPO_NAME*.dll";
        $ppdb = $path + "//mods/$env:REPO_NAME/$env:REPO_NAME*.pdb";
        # The folders are required to be created before executing the script
        New-Item -ItemType directory -Force -Path $impl;
        New-Item -ItemType directory -Force -Path $path;

        dotnet clean $proj --configuration Release;
        dotnet build $proj --configuration Release -p:GameFolder="$path";
        Copy-Item $pdll $impl/;
            Copy-Item $ppdb $impl/;


        # Copy Implementations to the Module
        Copy-Item $impl/* $final;
        # Delete Implementations folder
        Remove-Item -Recurse $impl;
        
    - name: Upload build
      uses: actions/upload-artifact@v4
      with:
        name: Build
        path: ./stardew/
